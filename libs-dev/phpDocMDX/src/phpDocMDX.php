<?php
/**
 * XXX
 *
 * @author  Tommander <tommander@tommander.cz>
 * @license MIT license https://opensource.org/licenses/MIT
 */

namespace TMD\PDMDX;

require __DIR__.'/../../../vendor/autoload.php';

$opts = \getopt(
    'hi:o:',
    [
        "help",
        "input:",
        "output:",
    ]
);

if (count($opts) === 0
    || isset($opts['h']) === true
    || isset($opts['help']) === true
) {
    echo "PHPDocMDX\r\n";
    echo "A tool to convert PHPDoc XML structure file to Markdown format.\r\n\r\n";
    echo "License:\r\n";
    echo "  MIT\r\n\r\n";
    echo "Author:\r\n";
    echo "  Tommander <tommander@tommander.cz>\r\n\r\n";
    echo "Usage:\r\n";
    echo "  php phpDocMDX.php --input=\"...\" --output=\"...\"\r\n";
    echo "  php phpDocMDX.php -i=\"...\" -o=\"...\"\r\n";
    echo "  php phpDocMDX.php -h\r\n";
    echo "  php phpDocMDX.php --help\r\n\r\n";
    echo "Arguments:\r\n";
    echo "  -h\r\n";
    echo "  --help\r\n";
    echo "    This help.\r\n\r\n";
    echo "  -i=\"<filepath>\"\r\n";
    echo "  --input=\"<filepath>\"\r\n";
    echo "    Input XML file generated by PHPDoc. No leading (back)slash. Relative path to the directory of this script.\r\n\r\n";
    echo "  -o=\"<dirpath>\"\r\n";
    echo "  --output=\"<dirpath>\"\r\n";
    echo "    Output directory for Markdown files. No leading (back)slash. Required trailing (back)slash. Relative path to the directory of this script.\r\n\r\n";
    exit(0);
}//end if

if (isset($opts['i']) === true && isset($opts['input']) === true) {
    "[ERROR] Use either parameter 'i' or 'input', but not both at the same time.\r\n";
    exit(1);
}

if (isset($opts['o']) === true && isset($opts['output']) === true) {
    "[ERROR] Use either parameter 'o' or 'output', but not both at the same time.\r\n";
    exit(1);
}

$fileIn = '';
$dirOut = '';

if (isset($opts['i']) === true && is_string($opts['i']) === true) {
    $fileIn = $opts['i'];
}

if (isset($opts['input']) === true && is_string($opts['input']) === true) {
    $fileIn = $opts['input'];
}

if (isset($opts['o']) === true && is_string($opts['o']) === true) {
    $dirOut = $opts['o'];
}

if (isset($opts['output']) === true && is_string($opts['output']) === true) {
    $dirOut = $opts['output'];
}

$fileInFull = PDHelper::makePath($fileIn);
$dirOutFull = PDHelper::makePath($dirOut);

if (file_exists($fileInFull) !== true) {
    echo "[ERROR] Input file \"${fileInFull}\" does not exist.\r\n";
    exit(1);
}

if (file_exists($dirOutFull) !== true) {
    echo "[ERROR] Output directory \"${dirOutFull}\" does not exist.\r\n";
    exit(1);
}

$pdmdxparser = new PDParser($fileIn, $dirOut);
$pdmdxparser->run();
exit(0);
